{"version":3,"sources":["Navigation/Navigation.js","FilterSelection/FilterSelection.js","SearchBar/SearchBar.js","CountryCard/CountryCard.js","CountryList/CountryList.js","BackButton/BackButton.js","ButtonList/ButtonList.js","CountryPage/CountryPage.js","App.js","serviceWorker.js","index.js"],"names":["moon","style","height","width","marginRight","icon","Navigation","onToggleModeChange","toggleMode","classAdder","onClick","className","display","flexDirection","alignItems","justifyContent","FilterSelection","onFilterChange","id","type","name","value","SearchBar","textChange","placeholder","onChange","CountryCard","country","onCountrySelection","population","region","capital","flag","newStyle","e","alt","src","padding","marginBottom","CountryList","FilteredCountries","map","key","numericCode","BackButton","onRouteChange","marginTop","ButtonList","borders","borderbutton","border","i","appender","data","append","forEach","element","CountryPage","selectedCountry","CountriesData","nativeName","subregion","topLevelDomain","currencies","languages","appendCurrencies","appendLang","filterBorders","filter","alpha3Code","indexOf","join","library","add","faMoon","faSearch","faArrowLeft","faChevronUp","faChevronDown","faFrown","App","props","setState","searchText","target","router","state","toLowerCase","includes","countriesFilter","isError","fetch","then","json","countrySets","console","log","catch","err","this","pageSwitch","paddingTop","paddingBottom","minHeight","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.14f0ab4a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navigation.style.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\n\r\nconst moon = <FontAwesomeIcon style={{height:'1.3rem',width:'1.3rem',marginRight:'1rem'}} icon=\"moon\" />\r\n\r\nconst Navigation=({onToggleModeChange,toggleMode})=>{\r\n let classAdder=(toggleMode)?'dark-element-bg':''\r\n\r\n return(\r\n <nav onClick={()=>onToggleModeChange(!toggleMode)} className={`Navigation ${classAdder}`} >\r\n    <div className='container'>   \r\n      <div className='nav-bar'>\r\n        <h1>Where in the World</h1>  \r\n        <div style={{\r\n            display:'flex',\r\n            flexDirection:'row',\r\n            alignItems:'center',\r\n            justifyContent:'center'\r\n        }}>\r\n        {moon}\r\n        <p>Dark Mode</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n        </nav>\r\n        );\r\n    \r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './Filter.style.css'\r\n\r\nconst FilterSelection=({onFilterChange,toggleMode})=>{\r\n        // add to select-box,label,opt-val,option-bg\r\nlet classAdder=(toggleMode)?'element-bg':'';\r\n    \r\n    return (\r\n<section id=\"app-cover\">\r\n            <div id=\"select-box\">\r\n                    <input type=\"checkbox\" id=\"options-view-button\"/>\r\n                    <div id='select-button' className={`brd ${classAdder}`}>\r\n                            <div id=\"selected-value\" className={` ${classAdder}`}>\r\n                                <span>Filter by Region</span>\r\n                            </div>\r\n                            <div id=\"chevrons\">\r\n                            <FontAwesomeIcon className='icon' icon=\"chevron-down\" />   \r\n                            </div>\r\n                    </div>\r\n                    <div id=\"options\" className={` ${classAdder}`}>\r\n                            <div className={`option ${classAdder}`}>\r\n                                    <input onClick={onFilterChange} className=\"s-c top\"  type=\"radio\"  name=\"platform\" value=\"Africa\"/>\r\n                                    <input onClick={onFilterChange} className=\"s-c bottom\" type=\"radio\" name=\"platform\" value=\"Africa\"/>\r\n                                    <span className={`label ${classAdder}`}>Africa</span>\r\n                                    <span className={`opt-val ${classAdder}`}>Africa</span>\r\n                            </div>\r\n                            <div className={`option ${classAdder}`}>\r\n                                    <input onClick={onFilterChange} className=\"s-c top\" type=\"radio\" name=\"platform\" value=\"America\"/>\r\n                                    <input onClick={onFilterChange} className=\"s-c bottom\" type=\"radio\" name=\"platform\" value=\"America\"/>    \r\n                                    <span className={`label ${classAdder}`}>America</span>\r\n                                    <span className={`opt-val ${classAdder}`}>America</span>\r\n                            </div>\r\n                            <div className={`option ${classAdder}`}>\r\n                                    <input onClick={onFilterChange} className=\"s-c top\" type=\"radio\" name=\"platform\" value=\"Asia\"/>\r\n                                    <input onClick={onFilterChange} className=\"s-c bottom\" type=\"radio\" name=\"platform\" value=\"Asia\"/>      \r\n                                    <span className={`label ${classAdder}`}>Asia</span>\r\n                                    <span className={`opt-val ${classAdder}`}>Asia</span>\r\n                            </div>\r\n                            <div className={`option ${classAdder}`}>\r\n                                    <input onClick={onFilterChange} className=\"s-c top\" type=\"radio\" name=\"platform\" value=\"Europe\"/>\r\n                                    <input onClick={onFilterChange} className=\"s-c bottom\" type=\"radio\" name=\"platform\" value=\"Europe\"/>                  \r\n                                    <span className={`label ${classAdder}`}>Europe</span>\r\n                                    <span className={`opt-val ${classAdder}`}>Europe</span>\r\n                            </div>\r\n                            <div className={`option ${classAdder}`}>\r\n                                    <input onClick={onFilterChange} className=\"s-c top\" type=\"radio\" name=\"platform\" value=\"Oceania\"/>\r\n                                    <input onClick={onFilterChange} className=\"s-c bottom\" type=\"radio\" name=\"platform\" value=\"Oceania\"/>        \r\n                                    <span className={`label ${classAdder}`}>Oceania</span>\r\n                                    <span className={`opt-val ${classAdder}`}>Oceania</span>\r\n                            </div>\r\n                            <div id=\"option-bg\" className={` ${classAdder}`}></div>\r\n                    </div>\r\n            </div>\r\n    </section>\r\n)}\r\n\r\nexport default FilterSelection;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './SearchBar.style.css'\r\n\r\n\r\nconst SearchBar=({textChange, toggleMode})=>{\r\n    let classAdder=(toggleMode)?'element-bg':''\r\n    return(\r\n    <div className={`input-body ${classAdder}`} >\r\n        <FontAwesomeIcon style={{marginRight:'1rem'}} icon=\"search\" />\r\n        <input className='search-input' \r\n        type=\"text\" name=\"country\" \r\n        placeholder=\"Search for Country...\"\r\n        onChange={textChange}\r\n        />\r\n    </div>\r\n)}\r\n\r\nexport default SearchBar;\r\n\r\n","import React from 'react';\r\n\r\n\r\nimport \"./CountryCard.style.css\";\r\n\r\n\r\nconst CountryCard=({country,onCountrySelection,toggleMode})=>{\r\n    let {name,population,region,capital,flag}=country;\r\n    let newStyle=(toggleMode)?'element-bg':'';\r\n    return(\r\n        <div className={`Card ${newStyle}`} style={{width:'235px'}} onClick={(e)=>onCountrySelection(country,'countryPage')}>\r\n           <img   alt='country Image'style={{width:'100%',height:156}} src={flag}/>\r\n           <div style={{padding:'2rem'}}>\r\n               <h2 style={{marginBottom:'1rem'}}>{name}</h2>\r\n               <p>{`Population:${population}`}</p>\r\n               <p>{`Region:${region}`}</p>\r\n               <p>{`Capital:${capital}`}</p>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryCard;","import React from 'react';\r\nimport './CountryList.css'\r\nimport CountryCard from '../CountryCard/CountryCard.js'\r\n\r\n\r\nconst CountryList=({FilteredCountries, onCountrySelection, toggleMode})=>{\r\n    return(\r\n        <div className='container card-display'>\r\n         {\r\n          FilteredCountries.map((country)=>\r\n          <CountryCard key={country.numericCode}\r\n           country={country} \r\n           toggleMode={toggleMode}\r\n           onCountrySelection={onCountrySelection} \r\n           \r\n           /> )   \r\n         }  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryList;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './BackButton.style.css'\r\n\r\nconst BackButton=({toggleMode,onRouteChange})=>{\r\n    let newStyle=(toggleMode)?'element-bg':''; \r\n    return (\r\n<div className={`btnBack ${newStyle}`} style={{marginTop:'3rem',marginBottom:'3rem'}} onClick={()=>onRouteChange('homePage')}>\r\n<FontAwesomeIcon style={{marginRight:'1rem'}} icon=\"arrow-left\" />\r\n<p>Back</p>\r\n</div>\r\n)}\r\n\r\nexport default BackButton;","import React from 'react';\r\nimport './ButtonList.style.css'\r\n\r\nconst ButtonList=({borders,toggleMode})=>{\r\n    let newStyle=(toggleMode)?'element-bg':''; \r\n    let borderbutton=borders.map((border,i) => {\r\n        return(<div key={i} className={`btn ${newStyle}`}>{border.name}</div>)\r\n    });\r\n    return (\r\n<div className='list'><b>Border Contries:</b>  \r\n{borderbutton}\r\n</div>\r\n)}\r\n\r\nexport default ButtonList;","import React from 'react';\r\nimport './CountryPage.style.css'\r\nimport BackButton from '../BackButton/BackButton'\r\nimport ButtonList from '../ButtonList/ButtonList'\r\n\r\n\r\n\r\nlet appender=(data)=>{\r\n    let append=''\r\n data.forEach(element => {\r\n         append+=`${element.name} `\r\n     })\r\n     return append;\r\n}\r\n\r\nconst CountryPage=({ toggleMode, onRouteChange, selectedCountry,CountriesData})=>{\r\n    let newStyle=(toggleMode)?'element-bg':''; \r\n    let {name,population,region,capital,flag,nativeName,subregion,\r\n        topLevelDomain,currencies,languages, borders}=selectedCountry;\r\n       let appendCurrencies=appender(currencies);\r\n       let appendLang=appender(languages)\r\n   \r\n            \r\n   let  filterBorders=CountriesData.filter(\r\n       ({alpha3Code})=>(!(-1===borders.indexOf(alpha3Code))) \r\n        )\r\n    return (\r\n<div className='container' > \r\n<BackButton onRouteChange={onRouteChange} toggleMode={toggleMode}/>\r\n<div className={`overview ${newStyle}`}>\r\n<img  alt='flag' className='item' src={flag}/>\r\n<div className='item full'>\r\n    <div className='description'>\r\n       <div>\r\n           <h1 style={{marginBottom:'2rem'}}>{name}</h1>\r\n           <p><b>Native Name:</b>{` ${nativeName}`}</p>\r\n           <p><b>Population:</b>{` ${population}`}</p>\r\n           <p><b>Region:</b>{` ${region}`}</p>\r\n           <p><b>Sub Region:</b>{` ${subregion}`}</p>\r\n           <p><b>Capital:</b>{` ${capital}`}</p>\r\n       </div>\r\n       <div>\r\n            <p><b>Top Level Domain:</b>{` ${topLevelDomain.join('')}`}</p>\r\n           <p><b>Currencies:</b>{` ${appendCurrencies}`}</p>\r\n           <p><b>Languages: </b>{` ${appendLang}`}</p> \r\n       </div>\r\n\r\n    </div>\r\n    <div><ButtonList toggleMode={toggleMode} borders={filterBorders}/></div>\r\n</div>\r\n</div>\r\n</div>\r\n)}\r\n\r\nexport default CountryPage;","import React from 'react';\nimport './App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faSearch,faMoon,faArrowLeft,faChevronUp,faChevronDown } from '@fortawesome/free-solid-svg-icons'\nimport { faFrown } from '@fortawesome/free-regular-svg-icons'\nimport Navigation from './Navigation/Navigation';\nimport FilterSelection from './FilterSelection/FilterSelection';\nimport SearchBar from './SearchBar/SearchBar';\nimport CountryList from './CountryList/CountryList';\nimport CountryPage from './CountryPage/CountryPage';\n\n\n\nlibrary.add(faMoon,faSearch,faArrowLeft,faChevronUp,faChevronDown,faFrown )\n\nclass App extends React.Component  {\n\n  constructor(props){\n  super(props)\n  this.state={\n    toggleMode:false,\n    selectedCountry:{},\n    router:'homePage',\n    searchText:'',\n    CountriesData:[],\n    countriesFilter:'',\n    isError:false\n  }\n  }\n\n  componentDidMount(){\n    fetch('https://restcountries.eu/rest/v2/all').then(data=>{\n      return data.json()\n          }).then(\n      countrySets=>{\n        console.log(countrySets)\n        this.setState({\n          CountriesData:countrySets\n        })\n      }\n    ).catch(err=>{\n      console.log(err)\n        if(err){\n          this.setState({\n            isError:true\n          })\n        }\n    })\n    \n  }\n\n  onChange=(e)=>{\n   this.setState({\n    searchText: e.target.value\n   })\n  }\n\n  onToggleModeChange=(toggleMode)=>{\n    this.setState({\n      toggleMode\n    })\n  }\n\n  onCountrySelection=(selectedCountry,router)=>{\n      this.setState({\n        selectedCountry,\n        router\n      })\n  }\n\n  onRouteChange=(router)=>{\n    this.setState({\n      router\n    })\n  }\n\n  FilteredCountries=()=>{\n        return (\n          this.state.CountriesData.filter(({name,region})=>\n          (name.toLowerCase().includes(\n            this.state.searchText.toLowerCase()) && (region.includes(this.state.countriesFilter))   )\n\n        ))\n  }\n\n  onFilterChange=(e)=>{\n    this.setState({\n      countriesFilter : e.target.value\n    }) \n  }\n\n\n  \n\n  render(){\n    const ErrorDisplay=<div>\n      <div className='error-style-light'></div>\n      <h1>Error Loading Countries <span>\n        <FontAwesomeIcon style={{marginRight:'1rem'}} icon=\"frown\" /></span> ......Pls Reload</h1>\n      <div></div>\n    </div>\n\n\nlet classAdder=(this.state.toggleMode)?'dark-bg':''\n\n\n\n\n\n   let pageSwitch=(this.state.router==='homePage')?\n   <div>\n   <div className='container' style={{\n    display:'flex',\n    flexDirection:'row',\n    alignItems:'center',\n    justifyContent:'space-between',\n    paddingTop:'3rem',\n    paddingBottom:'3rem'}} >\n<SearchBar textChange={this.onChange} toggleMode={this.state.toggleMode}/>\n<FilterSelection onFilterChange={this.onFilterChange} toggleMode={this.state.toggleMode}/>\n</div>\n<CountryList FilteredCountries={this.FilteredCountries()} \nonCountrySelection={this.onCountrySelection}\ntoggleMode={this.state.toggleMode}\n/>\n</div>:<CountryPage \ntoggleMode={this.state.toggleMode} \nonRouteChange={this.onRouteChange} \nselectedCountry={this.state.selectedCountry} \nCountriesData={this.state.CountriesData}\n/>\n\n    return (<div className={`light-bg ${classAdder}`} style={{ minHeight:'100vh'}}>\n  <Navigation onToggleModeChange={this.onToggleModeChange} toggleMode={this.state.toggleMode}/>\n    {pageSwitch}\n      \n  </div>\n  ) \n  }\n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["Navigation/Navigation.js","FilterSelection/FilterSelection.js","SearchBar/SearchBar.js","CountryCard/CountryCard.js","CountryList/CountryList.js","App.js","serviceWorker.js","index.js"],"names":["moon","style","height","width","marginRight","icon","Navigation","className","display","flexDirection","alignItems","justifyContent","FilterSelection","id","type","name","value","SearchBar","textChange","background","placeholder","onChange","CountryCard","country","onCountrySelection","population","region","capital","flag","onClick","e","alt","src","padding","marginBottom","CountryList","FilteredCountries","map","key","numericCode","library","add","faMoon","faSearch","faArrowLeft","faChevronUp","faChevronDown","App","props","setState","searchText","target","selectedCountry","state","CountriesData","filter","toLowerCase","includes","isError","filteredSelection","fetch","then","data","status","json","Error","countrySets","console","log","catch","err","hieght","paddingTop","paddingBottom","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.95a736e5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navigation.style.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\n\r\nconst moon = <FontAwesomeIcon style={{height:'1.3rem',width:'1.3rem',marginRight:'1rem'}} icon=\"moon\" />\r\n\r\nconst Navigation=()=>{\r\n return(\r\n <nav className='Navigation'>\r\n    <div className='container'>   \r\n      <div className='nav-bar'>\r\n        <h1>Where in the World</h1>  \r\n        <div style={{\r\n            display:'flex',\r\n            flexDirection:'row',\r\n            alignItems:'center',\r\n            justifyContent:'center'\r\n        }}>\r\n        {moon}\r\n        <p>Dark Mode</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n        </nav>\r\n        );\r\n    \r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './FilterSelection.style.css'\r\n\r\nconst FilterSelection=()=>{\r\n    \r\n    return (\r\n<section id=\"app-cover\">\r\n            <div id=\"select-box\">\r\n                    <input type=\"checkbox\" id=\"options-view-button\"/>\r\n                    <div id=\"select-button\" className=\"brd\">\r\n                            <div id=\"selected-value\">\r\n                                <span>Filter by Region</span>\r\n                            </div>\r\n                            <div id=\"chevrons\">\r\n                            <FontAwesomeIcon className='icon' icon=\"chevron-down\" />   \r\n                            </div>\r\n                    </div>\r\n                    <div id=\"options\">\r\n                            <div className=\"option\">\r\n                                    <input className=\"s-c top\" type=\"radio\" name=\"platform\" value=\"Africa\"/>\r\n                                    <input className=\"s-c bottom\" type=\"radio\" name=\"platform\" value=\"Africa\"/>\r\n                                    <span className=\"label\">Africa</span>\r\n                                    <span className=\"opt-val\">Africa</span>\r\n                            </div>\r\n                            <div className=\"option\">\r\n                                    <input className=\"s-c top\" type=\"radio\" name=\"platform\" value=\"America\"/>\r\n                                    <input className=\"s-c bottom\" type=\"radio\" name=\"platform\" value=\"America\"/>\r\n                                    \r\n                                    <span className=\"label\">America</span>\r\n                                    <span className=\"opt-val\">America</span>\r\n                            </div>\r\n                            <div className=\"option\">\r\n                                    <input className=\"s-c top\" type=\"radio\" name=\"platform\" value=\"Asia\"/>\r\n                                    <input className=\"s-c bottom\" type=\"radio\" name=\"platform\" value=\"Asia\"/>      \r\n                                    <span className=\"label\">Asia</span>\r\n                                    <span className=\"opt-val\">Asia</span>\r\n                            </div>\r\n                            <div className=\"option\">\r\n                                    <input className=\"s-c top\" type=\"radio\" name=\"platform\" value=\"Europe\"/>\r\n                                    <input className=\"s-c bottom\" type=\"radio\" name=\"platform\" value=\"Europe\"/>                  \r\n                                    <span className=\"label\">Europe</span>\r\n                                    <span className=\"opt-val\">Europe</span>\r\n                            </div>\r\n                            <div className=\"option\">\r\n                                    <input className=\"s-c top\" type=\"radio\" name=\"platform\" value=\"Oceania\"/>\r\n                                    <input className=\"s-c bottom\" type=\"radio\" name=\"platform\" value=\"Oceania\"/>        \r\n                                    <span className=\"label\">Oceania</span>\r\n                                    <span className=\"opt-val\">Oceania</span>\r\n                            </div>\r\n                            <div id=\"option-bg\"></div>\r\n                    </div>\r\n            </div>\r\n    </section>\r\n)}\r\n\r\nexport default FilterSelection;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './SearchBar.style.css'\r\n\r\n\r\nconst SearchBar=({textChange})=>(\r\n    <div className='input-body' style={{background:'#fff'\r\n\r\n}}>\r\n        <FontAwesomeIcon style={{marginRight:'1rem'}} icon=\"search\" />\r\n        <input className='search-input' \r\n        type=\"text\" name=\"name\" \r\n        placeholder=\"Search for Country...\"\r\n        onChange={textChange}\r\n        />\r\n    </div>\r\n)\r\n\r\nexport default SearchBar;\r\n\r\n","import React from 'react';\r\n\r\n\r\nimport \"./CountryCard.css\";\r\n\r\n\r\nconst CountryCard=({country,onCountrySelection})=>{\r\n    let {name,population,region,capital,flag}=country\r\n    return(\r\n        <div className='Card' style={{width:'235px',background:'#fff'}} onClick={(e)=>onCountrySelection(country)}>\r\n           <img   alt='country Image'style={{width:'100%'}} src={flag}/>\r\n           <div style={{padding:'2rem'}}>\r\n               <h2 style={{marginBottom:'1rem'}}>{name}</h2>\r\n               <p>{`Population:${population}`}</p>\r\n               <p>{`Region:${region}`}</p>\r\n               <p>{`Capital:${capital}`}</p>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryCard;","import React from 'react';\r\nimport './CountryList.css'\r\nimport CountryCard from '../CountryCard/CountryCard.js'\r\n\r\n\r\nconst CountryList=({FilteredCountries, onCountrySelection})=>{\r\n    return(\r\n        <div className='container card-display'>\r\n         {\r\n          FilteredCountries.map((country)=><CountryCard key={country.numericCode} country={country} onCountrySelection={onCountrySelection} /> )   \r\n         }  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryList;","import React from 'react';\nimport './App.css';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faSearch,faMoon,faArrowLeft,faChevronUp,faChevronDown } from '@fortawesome/free-solid-svg-icons'\nimport Navigation from './Navigation/Navigation';\nimport FilterSelection from './FilterSelection/FilterSelection';\nimport SearchBar from './SearchBar/SearchBar';\nimport CountryList from './CountryList/CountryList';\n\n\n\nlibrary.add(faMoon,faSearch,faArrowLeft,faChevronUp,faChevronDown )\n\nclass App extends React.Component  {\n\n  constructor(props){\n  super(props)\n  this.state={\n    selectedCountry:{},\n    searchText:'',\n    CountriesData:[],\n    isError:false,\n    filteredSelection:''\n  }\n  }\n\n  componentDidMount(){\n    fetch('https://restcountries.eu/rest/v2/all').then(data=>{\n      if(data.status===200){\n        return data.json()\n      }else{\n\n        this.setState({\n          isError:true\n        })\n        throw new Error('countries data not recieved...')\n      }\n      }).then(\n      countrySets=>{\n        console.log(countrySets)\n        this.setState({\n          CountriesData:countrySets\n        })\n      }\n    ).catch(err=>{\n        console.log(err)\n    })\n    \n  }\n\n\n  onChange=(e)=>{\n   this.setState({\n    searchText: e.target.value\n   })\n  }\n\n  onCountrySelection=(selectedCountry)=>{\n      this.setState({\n        selectedCountry\n      })\n  }\n\n  FilteredCountries=()=>{\n        return (\n          this.state.CountriesData.filter(country=>\n          (country.name.toLowerCase().includes(this.state.searchText.toLowerCase()))\n\n        ))\n  }\n\n  \n\n  render(){\n    return (\n      <div style={{ hieght:'100vh',background:'#fafafa'}}>\n  <Navigation/>\n      <div className='container' style={{\n            display:'flex',\n            flexDirection:'row',\n            alignItems:'center',\n            justifyContent:'space-between',\n            paddingTop:'3rem',\n            paddingBottom:'3rem'}} >\n        <SearchBar textChange={this.onChange}/>\n        <FilterSelection/>\n      </div>\n     <CountryList FilteredCountries={this.FilteredCountries()} \n     onCountrySelection={this.onCountrySelection}\n     />\n  </div>\n  ) \n  }\n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}